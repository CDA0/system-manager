---
- name: Create key files
  command: "dd if=/dev/urandom of=/{{ item.partition_name }}.keyfile bs=1 count=256 creates=/{{ item.1.name }}.keyfile"
  loop: "{{ encrypted_keyfiles }}"

- name: Encrypt with passphrase and open
  luks_device:
    device: "{% if item.type == 'raid' %}/dev/md/{{ item.mdadm_name }}{% else %}{{ item.device }}{% endif %}"
    state: opened
    name: "{{ item.encrypt_name }}"
    passphrase: "{{ luks_passphrase }}"
    type: luks2
  loop: "{{ encrypted }}"
  when: item.1.encrypt is defined and item.1.encrypt
  with_subelements:
    - "{{ sata_drives }}"
    - partitions

- name: Add keyfile to passphrase encrypted
  luks_device:
    device: "/dev/disk/by-id/{{ item.0.device_id }}-part{{ item.1.number }}"
    state: opened
    name: "{{ item.1.name }}"
    new_keyfile: "/{{ item.1.name }}.keyfile"
    type: luks2
  when: item.1.keyfile is defined and item.1.keyfile
  with_subelements:
    - "{{ sata_drives }}"
    - partitions

- name: Encrypt with passphrase and open luks for mdadm
  luks_device:
    device: "/dev/md/{{ item.name }}"
    state: opened
    name: "{{ item.name }}"
    passphrase: "{{ luks_passphrase }}"
    type: luks2
  when: item.encrypt is defined and item.encrypt
  loop: "{{ mdadm_arrays }}"

- name: Add keyfile to passphrase encrypted on raid
  luks_device:
    device: "/dev/md/{{ item.name }}"
    state: opened
    name: "{{ item.name }}"
    passphrase: "{{ luks_passphrase }}"
    new_keyfile: "/{{ item.name }}.keyfile"
    type: luks2
  when: item.keyfile is defined and item.keyfile
  loop: "{{ mdadm_arrays }}"
